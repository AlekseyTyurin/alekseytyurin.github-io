[
  {
    "age": 1,
    "title": "call()",
    "snippet": "Метод, похожий на apply. Тоже вызывает функцию, методом которой является, только принимает аргументы как обычно, а не в виде массива. Как apply и bind, в call можно передать значение this. To summarize, call() is useful because it lets you change what this is. Such a thing might seem weird at first, but hopefully I’ve shown how useful it can be.",
    "image": "img/javascript-function-methods-call.png"
  },
  {
    "age": 2,
    "title": "Fat Arrow Function",
    "snippet": "JavaScript has first class functions. This means that in JavaScript functions can be themselves be passed around like any other value, even as arguments to other functions. ",
    "image": "img/fatarrowfunc_sm.jpg",
    "example1": "setTimeout(function() { console.log('setTimeout called!'); }, 1000);",
    "example2": "setTimeout(() => { console.log('setTimeout called!'); }, 1000);"
  },
  {
    "age": 3,
    "title": "apply()",
    "snippet": "Метод apply. Ему передают массив (или объект в виде массива) из аргументов, а он вызывает функцию с этими аргументами. Другими словами, передают аргументы в виде массива. To review, apply() gives you all the same power of call(), with the added twist of letting you specify arguments as an array, which can make your life a lot easier in certain scenarios.",
    "image": "img/javascript-function-methods-apply.png"
  },
  {
    "age": 4,
    "title": "bind()",
    "snippet": "Метод для создания копии функции с частично заданныи аргументами. bind() is an interesting one. The concept of calling a function on a function to create a new function might sound bizarre at first, but it’s not so bad, and the utility it provides is definitely worth giving it a chance.",
    "image": "img/javascript-function-methods-bind.png"
  },

  {
    "age": 5,
    "title": "Array",
    "snippet": "У массивов есть несколько полезных методов высшего порядка – forEach, чтобы сделать что-то с каждым элементом, filter – чтобы построить новый массив, где некоторые значения отфильтрованы, map – чтобы построить новый массив, каждый элемент которого пропущен через функцию, reduce – для комбинации всех элементов массива в одно значение",
    "image": "img/array.png"
  },
  {
    "age": 6,
    "title": "Strict mode",
    "snippet": "Режим strict (строгий режим), введенный в ECMAScript 5, позволяет использовать более строгий вариант JavaScript. Это не просто подмножество языка: в нем сознательно используется семантика, отличающаяся от обычно принятой. Не поддерживающие строгий режим браузеры будут по-другому выполнять код, написанный для строгого режима, поэтому не полагайтесь на строгий режим без тестирования поддержки используемых особенностей этого режима. Строгий и обычный режим могут сосуществовать одновременно, а скрипт может переключаться в строгий режим по мере надобности. Строгий режим принёс ряд изменений в обычную семантику JavaScript. Во-первых, строгий режим заменяет исключениями некоторые ошибки, которые интерпретатор JavaScript ранее молча пропускал. Во-вторых, строгий режим исправляет ошибки, которые мешали движкам JavaScript выполнять оптимизацию -- в некоторых случаях код в строгом режиме может быть оптимизирован для более быстрого выполнения, чем код в обычном режиме. В-третьих, строгий режим запрещает использовать некоторые элементы синтаксиса, которые, вероятно, в следующих версиях ECMAScript получат особый смысл.",
    "image": "http://i.imgur.com/kFFpuKA.jpg",
    "example1": "'use strict'; var v = 'Привет! Я скрипт в строгом режиме!';"
  },
  {
    "age": 7,
    "title": "Title 7",
    "snippet": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    "image": "http://i.imgur.com/E9RmLPA.jpg"
  },
  {
    "age": 8,
    "title": "Title 8",
    "snippet": "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    "image": "http://i.imgur.com/8lhFhc1.gif"
  },
  {
    "age": 9,
    "title": "HTML5 video",
    "snippet": "Элемент, включённый в проект спецификации HTML 5, который используется для воспроизведения видеозаписей, частично заменяя элемент <object>. Adobe Flash Player широко использовался для встраивания содержимого видео-файлов на сайтах (например, YouTube). Flash Player доступен в качестве плагина для большинства веб-браузеров последних версий (таких как Mozilla Firefox, SeaMonkey, Opera и Safari), и несовместим, например, со встроенными браузерами iPod и iPhone от Apple, а также с Android версии 2.01 или меньше и версии 4.1.x и выше (официально). Google Chrome с некоторых пор содержит данный плагин по умолчанию. Создатели HTML 5 video считают, что это станет стандартным способом просмотра видео онлайн, но основным препятствием для принятия данного соглашения является вопрос о том, какие именно видео форматы должны поддерживаться этим видео тегом.",
    "image": "img/html5_video.png"
  }
]